{"uid":"2afc900ba143f1ee","name":"test_github","fullName":"tests.test_selene#test_github","historyId":"5167f7c71535600a353c42dca9c39857","time":{"start":1697455000411,"stop":1697455001373,"duration":962},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55b8a5025fb3 <unknown>\n#1 0x55b8a4cf94a7 <unknown>\n#2 0x55b8a4d3195b <unknown>\n#3 0x55b8a4d30c1a <unknown>\n#4 0x55b8a4d2bacf <unknown>\n#5 0x55b8a4d2910c <unknown>\n#6 0x55b8a4d6bac6 <unknown>\n#7 0x55b8a4d62713 <unknown>\n#8 0x55b8a4d3518b <unknown>\n#9 0x55b8a4d35f7e <unknown>\n#10 0x55b8a4feb8d8 <unknown>\n#11 0x55b8a4fef800 <unknown>\n#12 0x55b8a4ff9cfc <unknown>\n#13 0x55b8a4ff0418 <unknown>\n#14 0x55b8a4fbd42f <unknown>\n#15 0x55b8a50144e8 <unknown>\n#16 0x55b8a50146b4 <unknown>\n#17 0x55b8a5025143 <unknown>\n#18 0x7f5993494b43 <unknown>","statusTrace":"browser_management = None\n\n    def test_github(browser_management):\n>       browser.open('/')\n\ntests/test_selene.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ff559c850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55b8a50146b4 \\\\u003Cunknown>\\\\n#17 0x55b8a5025143 \\\\u003Cunknown>\\\\n#18 0x7f5993494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55b8a5025fb3 <unknown>\nE       #1 0x55b8a4cf94a7 <unknown>\nE       #2 0x55b8a4d3195b <unknown>\nE       #3 0x55b8a4d30c1a <unknown>\nE       #4 0x55b8a4d2bacf <unknown>\nE       #5 0x55b8a4d2910c <unknown>\nE       #6 0x55b8a4d6bac6 <unknown>\nE       #7 0x55b8a4d62713 <unknown>\nE       #8 0x55b8a4d3518b <unknown>\nE       #9 0x55b8a4d35f7e <unknown>\nE       #10 0x55b8a4feb8d8 <unknown>\nE       #11 0x55b8a4fef800 <unknown>\nE       #12 0x55b8a4ff9cfc <unknown>\nE       #13 0x55b8a4ff0418 <unknown>\nE       #14 0x55b8a4fbd42f <unknown>\nE       #15 0x55b8a50144e8 <unknown>\nE       #16 0x55b8a50146b4 <unknown>\nE       #17 0x55b8a5025143 <unknown>\nE       #18 0x7f5993494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_management","time":{"start":1697455000410,"stop":1697455000410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55b8a5025fb3 <unknown>\n#1 0x55b8a4cf94a7 <unknown>\n#2 0x55b8a4d3195b <unknown>\n#3 0x55b8a4d30c1a <unknown>\n#4 0x55b8a4d2bacf <unknown>\n#5 0x55b8a4d2910c <unknown>\n#6 0x55b8a4d6bac6 <unknown>\n#7 0x55b8a4d62713 <unknown>\n#8 0x55b8a4d3518b <unknown>\n#9 0x55b8a4d35f7e <unknown>\n#10 0x55b8a4feb8d8 <unknown>\n#11 0x55b8a4fef800 <unknown>\n#12 0x55b8a4ff9cfc <unknown>\n#13 0x55b8a4ff0418 <unknown>\n#14 0x55b8a4fbd42f <unknown>\n#15 0x55b8a50144e8 <unknown>\n#16 0x55b8a50146b4 <unknown>\n#17 0x55b8a5025143 <unknown>\n#18 0x7f5993494b43 <unknown>","statusTrace":"browser_management = None\n\n    def test_github(browser_management):\n>       browser.open('/')\n\ntests/test_selene.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ff559c850>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55b8a50146b4 \\\\u003Cunknown>\\\\n#17 0x55b8a5025143 \\\\u003Cunknown>\\\\n#18 0x7f5993494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55b8a5025fb3 <unknown>\nE       #1 0x55b8a4cf94a7 <unknown>\nE       #2 0x55b8a4d3195b <unknown>\nE       #3 0x55b8a4d30c1a <unknown>\nE       #4 0x55b8a4d2bacf <unknown>\nE       #5 0x55b8a4d2910c <unknown>\nE       #6 0x55b8a4d6bac6 <unknown>\nE       #7 0x55b8a4d62713 <unknown>\nE       #8 0x55b8a4d3518b <unknown>\nE       #9 0x55b8a4d35f7e <unknown>\nE       #10 0x55b8a4feb8d8 <unknown>\nE       #11 0x55b8a4fef800 <unknown>\nE       #12 0x55b8a4ff9cfc <unknown>\nE       #13 0x55b8a4ff0418 <unknown>\nE       #14 0x55b8a4fbd42f <unknown>\nE       #15 0x55b8a50144e8 <unknown>\nE       #16 0x55b8a50146b4 <unknown>\nE       #17 0x55b8a5025143 <unknown>\nE       #18 0x7f5993494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[],"attachments":[{"uid":"e9f4b8a013d2882c","name":"stderr","source":"e9f4b8a013d2882c.txt","type":"text/plain","size":516}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser_management::0","time":{"start":1697455001465,"stop":1697455002434,"duration":969},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55d7f4a33fb3 <unknown>\n#1 0x55d7f47074a7 <unknown>\n#2 0x55d7f473f95b <unknown>\n#3 0x55d7f473ec1a <unknown>\n#4 0x55d7f4739acf <unknown>\n#5 0x55d7f473710c <unknown>\n#6 0x55d7f4779ac6 <unknown>\n#7 0x55d7f4770713 <unknown>\n#8 0x55d7f474318b <unknown>\n#9 0x55d7f4743f7e <unknown>\n#10 0x55d7f49f98d8 <unknown>\n#11 0x55d7f49fd800 <unknown>\n#12 0x55d7f4a07cfc <unknown>\n#13 0x55d7f49fe418 <unknown>\n#14 0x55d7f49cb42f <unknown>\n#15 0x55d7f4a224e8 <unknown>\n#16 0x55d7f4a226b4 <unknown>\n#17 0x55d7f4a33143 <unknown>\n#18 0x7f0da3494b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/qa_guru_python_7/qa_guru_python_7/tests/conftest.py\", line 23, in browser_management\n    browser.quit()\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1205, in quit\n    self.driver.quit()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_selene"},{"name":"host","value":"fv-az244-344"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_selene"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":4,"skipped":0,"passed":1,"unknown":0,"total":6},"items":[{"uid":"4b81908effdddaf6","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/10//#testresult/4b81908effdddaf6","status":"broken","statusDetails":"ImportError: cannot import name 'ChromeType' from 'webdriver_manager.core.utils' (/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/webdriver_manager/core/utils.py)","time":{"start":1697444620037,"stop":1697444620038,"duration":1}},{"uid":"989b70b0033b5e6c","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/9//#testresult/989b70b0033b5e6c","status":"failed","statusDetails":"selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('link text', 'eroshenkoam/allure-example')).click\n\nReason: NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"eroshenkoam/allure-example\"}\n  (Session info: headless chrome=114.0.5735.198); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x562055d354e3 <unknown>\n#1 0x562055a64c76 <unknown>\n#2 0x562055aa0c96 <unknown>\n#3 0x562055aa0dc1 <unknown>\n#4 0x562055ada7f4 <unknown>\n#5 0x562055ac003d <unknown>\n#6 0x562055ad830e <unknown>\n#7 0x562055abfde3 <unknown>\n#8 0x562055a952dd <unknown>\n#9 0x562055a9634e <unknown>\n#10 0x562055cf53e4 <unknown>\n#11 0x562055cf93d7 <unknown>\n#12 0x562055d03b20 <unknown>\n#13 0x562055cfa023 <unknown>\n#14 0x562055cc81aa <unknown>\n#15 0x562055d1e6b8 <unknown>\n#16 0x562055d1e847 <unknown>\n#17 0x562055d2e243 <unknown>\n#18 0x7f4d6a0bab43 <unknown>\n\nScreenshot: file:///home/runner/.selene/screenshots/1688982498799/1688982498799.png\nPageSource: file:///home/runner/.selene/screenshots/1688982498799/1688982498799.html","time":{"start":1688982500824,"stop":1688982507546,"duration":6722}},{"uid":"92c122d0b9566dfd","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/8//#testresult/92c122d0b9566dfd","status":"passed","time":{"start":1688981953120,"stop":1688981960225,"duration":7105}},{"uid":"7ac388af4e5df7fc","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/7//#testresult/7ac388af4e5df7fc","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x56358b22f4e3 <unknown>\n#1 0x56358af5ec76 <unknown>\n#2 0x56358af87d78 <unknown>\n#3 0x56358af84029 <unknown>\n#4 0x56358afc2ccc <unknown>\n#5 0x56358afc247f <unknown>\n#6 0x56358afb9de3 <unknown>\n#7 0x56358af8f2dd <unknown>\n#8 0x56358af9034e <unknown>\n#9 0x56358b1ef3e4 <unknown>\n#10 0x56358b1f33d7 <unknown>\n#11 0x56358b1fdb20 <unknown>\n#12 0x56358b1f4023 <unknown>\n#13 0x56358b1c21aa <unknown>\n#14 0x56358b2186b8 <unknown>\n#15 0x56358b218847 <unknown>\n#16 0x56358b228243 <unknown>\n#17 0x7fbd97b3cb43 <unknown>","time":{"start":1688980172645,"stop":1688980173289,"duration":644}},{"uid":"4ff1187b2bae8427","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/5//#testresult/4ff1187b2bae8427","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e1ca2a54e3 <unknown>\n#1 0x55e1c9fd4c76 <unknown>\n#2 0x55e1c9ffdd78 <unknown>\n#3 0x55e1c9ffa029 <unknown>\n#4 0x55e1ca038ccc <unknown>\n#5 0x55e1ca03847f <unknown>\n#6 0x55e1ca02fde3 <unknown>\n#7 0x55e1ca0052dd <unknown>\n#8 0x55e1ca00634e <unknown>\n#9 0x55e1ca2653e4 <unknown>\n#10 0x55e1ca2693d7 <unknown>\n#11 0x55e1ca273b20 <unknown>\n#12 0x55e1ca26a023 <unknown>\n#13 0x55e1ca2381aa <unknown>\n#14 0x55e1ca28e6b8 <unknown>\n#15 0x55e1ca28e847 <unknown>\n#16 0x55e1ca29e243 <unknown>\n#17 0x7f0f37c35b43 <unknown>","time":{"start":1688978997939,"stop":1688978998583,"duration":644}}]},"tags":[]},"source":"2afc900ba143f1ee.json","parameterValues":[]}