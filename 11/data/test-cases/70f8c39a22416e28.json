{"uid":"70f8c39a22416e28","name":"test_dynamic_steps","fullName":"tests.test_steps#test_dynamic_steps","historyId":"7c7c5e5f20fe2663d33f122f5ce2ca5a","time":{"start":1697455002506,"stop":1697455003481,"duration":975},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55938eab2fb3 <unknown>\n#1 0x55938e7864a7 <unknown>\n#2 0x55938e7be95b <unknown>\n#3 0x55938e7bdc1a <unknown>\n#4 0x55938e7b8acf <unknown>\n#5 0x55938e7b610c <unknown>\n#6 0x55938e7f8ac6 <unknown>\n#7 0x55938e7ef713 <unknown>\n#8 0x55938e7c218b <unknown>\n#9 0x55938e7c2f7e <unknown>\n#10 0x55938ea788d8 <unknown>\n#11 0x55938ea7c800 <unknown>\n#12 0x55938ea86cfc <unknown>\n#13 0x55938ea7d418 <unknown>\n#14 0x55938ea4a42f <unknown>\n#15 0x55938eaa14e8 <unknown>\n#16 0x55938eaa16b4 <unknown>\n#17 0x55938eab2143 <unknown>\n#18 0x7f75e1494b43 <unknown>","statusTrace":"browser_management = None\n\n    def test_dynamic_steps(browser_management):\n        with allure.step('Open main page'):\n>           browser.open('/')\n\ntests/test_steps.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ff567fe10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55938eaa16b4 \\\\u003Cunknown>\\\\n#17 0x55938eab2143 \\\\u003Cunknown>\\\\n#18 0x7f75e1494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55938eab2fb3 <unknown>\nE       #1 0x55938e7864a7 <unknown>\nE       #2 0x55938e7be95b <unknown>\nE       #3 0x55938e7bdc1a <unknown>\nE       #4 0x55938e7b8acf <unknown>\nE       #5 0x55938e7b610c <unknown>\nE       #6 0x55938e7f8ac6 <unknown>\nE       #7 0x55938e7ef713 <unknown>\nE       #8 0x55938e7c218b <unknown>\nE       #9 0x55938e7c2f7e <unknown>\nE       #10 0x55938ea788d8 <unknown>\nE       #11 0x55938ea7c800 <unknown>\nE       #12 0x55938ea86cfc <unknown>\nE       #13 0x55938ea7d418 <unknown>\nE       #14 0x55938ea4a42f <unknown>\nE       #15 0x55938eaa14e8 <unknown>\nE       #16 0x55938eaa16b4 <unknown>\nE       #17 0x55938eab2143 <unknown>\nE       #18 0x7f75e1494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_management","time":{"start":1697455002505,"stop":1697455002506,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55938eab2fb3 <unknown>\n#1 0x55938e7864a7 <unknown>\n#2 0x55938e7be95b <unknown>\n#3 0x55938e7bdc1a <unknown>\n#4 0x55938e7b8acf <unknown>\n#5 0x55938e7b610c <unknown>\n#6 0x55938e7f8ac6 <unknown>\n#7 0x55938e7ef713 <unknown>\n#8 0x55938e7c218b <unknown>\n#9 0x55938e7c2f7e <unknown>\n#10 0x55938ea788d8 <unknown>\n#11 0x55938ea7c800 <unknown>\n#12 0x55938ea86cfc <unknown>\n#13 0x55938ea7d418 <unknown>\n#14 0x55938ea4a42f <unknown>\n#15 0x55938eaa14e8 <unknown>\n#16 0x55938eaa16b4 <unknown>\n#17 0x55938eab2143 <unknown>\n#18 0x7f75e1494b43 <unknown>","statusTrace":"browser_management = None\n\n    def test_dynamic_steps(browser_management):\n        with allure.step('Open main page'):\n>           browser.open('/')\n\ntests/test_steps.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3ff567fe10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55938eaa16b4 \\\\u003Cunknown>\\\\n#17 0x55938eab2143 \\\\u003Cunknown>\\\\n#18 0x7f75e1494b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nE       Current browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nE       Stacktrace:\nE       #0 0x55938eab2fb3 <unknown>\nE       #1 0x55938e7864a7 <unknown>\nE       #2 0x55938e7be95b <unknown>\nE       #3 0x55938e7bdc1a <unknown>\nE       #4 0x55938e7b8acf <unknown>\nE       #5 0x55938e7b610c <unknown>\nE       #6 0x55938e7f8ac6 <unknown>\nE       #7 0x55938e7ef713 <unknown>\nE       #8 0x55938e7c218b <unknown>\nE       #9 0x55938e7c2f7e <unknown>\nE       #10 0x55938ea788d8 <unknown>\nE       #11 0x55938ea7c800 <unknown>\nE       #12 0x55938ea86cfc <unknown>\nE       #13 0x55938ea7d418 <unknown>\nE       #14 0x55938ea4a42f <unknown>\nE       #15 0x55938eaa14e8 <unknown>\nE       #16 0x55938eaa16b4 <unknown>\nE       #17 0x55938eab2143 <unknown>\nE       #18 0x7f75e1494b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Open main page","time":{"start":1697455002506,"stop":1697455003479,"duration":973},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x55938eab2fb3 <unknown>\n#1 0x55938e7864a7 <unknown>\n#2 0x55938e7be95b <unknown>\n#3 0x55938e7bdc1a <unknown>\n#4 0x55938e7b8acf <unknown>\n#5 0x55938e7b610c <unknown>\n#6 0x55938e7f8ac6 <unknown>\n#7 0x55938e7ef713 <unknown>\n#8 0x55938e7c218b <unknown>\n#9 0x55938e7c2f7e <unknown>\n#10 0x55938ea788d8 <unknown>\n#11 0x55938ea7c800 <unknown>\n#12 0x55938ea86cfc <unknown>\n#13 0x55938ea7d418 <unknown>\n#14 0x55938ea4a42f <unknown>\n#15 0x55938eaa14e8 <unknown>\n#16 0x55938eaa16b4 <unknown>\n#17 0x55938eab2143 <unknown>\n#18 0x7f75e1494b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/qa_guru_python_7/qa_guru_python_7/tests/test_steps.py\", line 10, in test_dynamic_steps\n    browser.open('/')\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"8b51c75fcc6bd75f","name":"stderr","source":"8b51c75fcc6bd75f.txt","type":"text/plain","size":516}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser_management::0","time":{"start":1697455003546,"stop":1697455004534,"duration":988},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 118\nCurrent browser version is 117.0.5938.132 with binary path /opt/google/chrome/chrome\nStacktrace:\n#0 0x5588018c8fb3 <unknown>\n#1 0x55880159c4a7 <unknown>\n#2 0x5588015d495b <unknown>\n#3 0x5588015d3c1a <unknown>\n#4 0x5588015ceacf <unknown>\n#5 0x5588015cc10c <unknown>\n#6 0x55880160eac6 <unknown>\n#7 0x558801605713 <unknown>\n#8 0x5588015d818b <unknown>\n#9 0x5588015d8f7e <unknown>\n#10 0x55880188e8d8 <unknown>\n#11 0x558801892800 <unknown>\n#12 0x55880189ccfc <unknown>\n#13 0x558801893418 <unknown>\n#14 0x55880186042f <unknown>\n#15 0x5588018b74e8 <unknown>\n#16 0x5588018b76b4 <unknown>\n#17 0x5588018c8143 <unknown>\n#18 0x7fd344a94b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/qa_guru_python_7/qa_guru_python_7/tests/conftest.py\", line 23, in browser_management\n    browser.quit()\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1205, in quit\n    self.driver.quit()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_steps"},{"name":"host","value":"fv-az244-344"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_steps"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":2,"unknown":0,"total":6},"items":[{"uid":"a79d5b6d3f22eb2c","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/10//#testresult/a79d5b6d3f22eb2c","status":"broken","statusDetails":"ImportError: cannot import name 'ChromeType' from 'webdriver_manager.core.utils' (/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/webdriver_manager/core/utils.py)","time":{"start":1697444620101,"stop":1697444620102,"duration":1}},{"uid":"651e0704323e7ff1","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/9//#testresult/651e0704323e7ff1","status":"passed","time":{"start":1688982507733,"stop":1688982513518,"duration":5785}},{"uid":"bca2a94cf205c615","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/8//#testresult/bca2a94cf205c615","status":"passed","time":{"start":1688981960291,"stop":1688981966150,"duration":5859}},{"uid":"75d0c1391bbc46cb","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/7//#testresult/75d0c1391bbc46cb","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55f38a43e4e3 <unknown>\n#1 0x55f38a16dc76 <unknown>\n#2 0x55f38a196d78 <unknown>\n#3 0x55f38a193029 <unknown>\n#4 0x55f38a1d1ccc <unknown>\n#5 0x55f38a1d147f <unknown>\n#6 0x55f38a1c8de3 <unknown>\n#7 0x55f38a19e2dd <unknown>\n#8 0x55f38a19f34e <unknown>\n#9 0x55f38a3fe3e4 <unknown>\n#10 0x55f38a4023d7 <unknown>\n#11 0x55f38a40cb20 <unknown>\n#12 0x55f38a403023 <unknown>\n#13 0x55f38a3d11aa <unknown>\n#14 0x55f38a4276b8 <unknown>\n#15 0x55f38a427847 <unknown>\n#16 0x55f38a437243 <unknown>\n#17 0x7f215f4c0b43 <unknown>","time":{"start":1688980174068,"stop":1688980174713,"duration":645}},{"uid":"380fb46da76d2bf8","reportUrl":"https://vapolonov.github.io/qa_guru_python_7/5//#testresult/380fb46da76d2bf8","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5565bba2d4e3 <unknown>\n#1 0x5565bb75cc76 <unknown>\n#2 0x5565bb785d78 <unknown>\n#3 0x5565bb782029 <unknown>\n#4 0x5565bb7c0ccc <unknown>\n#5 0x5565bb7c047f <unknown>\n#6 0x5565bb7b7de3 <unknown>\n#7 0x5565bb78d2dd <unknown>\n#8 0x5565bb78e34e <unknown>\n#9 0x5565bb9ed3e4 <unknown>\n#10 0x5565bb9f13d7 <unknown>\n#11 0x5565bb9fbb20 <unknown>\n#12 0x5565bb9f2023 <unknown>\n#13 0x5565bb9c01aa <unknown>\n#14 0x5565bba166b8 <unknown>\n#15 0x5565bba16847 <unknown>\n#16 0x5565bba26243 <unknown>\n#17 0x7f3ac113ab43 <unknown>","time":{"start":1688979000358,"stop":1688979001004,"duration":646}}]},"tags":[]},"source":"70f8c39a22416e28.json","parameterValues":[]}